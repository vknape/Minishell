<
>
|
$
<<
>>
$?


waiting commands need input:
grep
cat
awk
wc

non-waiting commands:
ls
sleep

cat < infile
cat < //parse error near \n
< cat infile //no such file or directory:
infile.txt //command not found: infile.txt
cat > outfile @@waits for input, ctrl-D to end
ls > nonexisting outfile @@creates outfile
ls > //parse error near \n
< infile @@opens subshell
infile | outfile //command not found: infile && command not found: outfile
ls | outfile //command not found: outfile
cat < ls | wc @@pipes ls to cat then cat to wc
<< LIM | cat @@heredoc output piped to cat
<< LIM wc | cat @@heredoc output piped to wc to cat
wc | @@waits for input to specify output for pipe, adds both lines to history
infile.txt >> out //command not found: infile.txt
ls >> cat @@creates cat if nonexisting and appends with ls
ls >> out >> outs @creates out and outs if nonexisting and appends with ls
cat < infile.txt << end | cat -e @@adds heredoc tekst to every line of infile.txt and cats and cat -e's every line
ls < infil < outfile | ls  //errors on reading nonexisting infile but executes command after the pipe
cat < infile < infile2 | cat @@opens infile then infile2 then cats
cat < cat < infile | cat //redirect only accepts files
cat < ls (no permission) | cat //errors no permission, doesn't also check for program ls
sleep 5 $? @@executes sleep 5 and adds value if available of next input
""" @@waits for same quote to close, same for single quotes
cat <> infile @@creates infile ifnotexist with read and write permissions and redirects to input to cat
